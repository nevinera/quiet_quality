#!/usr/bin/env ruby
require_relative "../lib/quiet_quality"

opt_parser = QuietQuality::Cli::OptionParser.new(ARGV)
tool_names, global_options, tool_options = opt_parser.parse!
options = QuietQuality::Cli::OptionsBuilder.new(tool_names: tool_names, global_options: global_options, tool_options: tool_options).options
outcomes = []

options.tools.each do |tool|
  warn "================ Running #{tool.tool_name}"
  outcome = tool.runner_class.new.invoke!
  outcomes << outcome

  if outcome.success?
    warn "No problems found!\n\n"
  else
    messages = tool.parser_class.new(outcome.output).messages

    warn "#{messages.count} messages\n"
    messages.each do |msg|
      warn "  #{msg.path}:#{msg.start_line}-#{msg.stop_line}    #{msg.rule}"
      warn "      #{msg.body}"
    end
    warn "\n"

    options.annotator.new.annotate!(messages) if options.annotator
  end
end

if outcomes.any? { |o| o.failure? }
  warn "failures detected in one or more tools"
  exit(1)
end
